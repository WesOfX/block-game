#version 430 core

layout(location = 0) in vec3 vertex_position;
layout(location = 1) in vec3 vertex_normal;
layout(location = 2) in vec3 vertex_uv;

out vec3 fragment_color;
out vec3 fragment_uv;

uniform mat4 mvp;

void main(){
	gl_Position = mvp * vec4(vertex_position, 1);
	// fragment_color = vertex_normal;
	float normal_shading = 0.5f;
	float brightness = (1.0f - normal_shading) 
	                 + normal_shading 
	                 * (vertex_normal.y / 2.0f + 0.5f) // (1 - normal_shading) to 1
	                 + ((normal_shading / 6.0f) * abs(vertex_normal.x))
	                 - ((normal_shading / 6.0f) * abs(vertex_normal.z));
	fragment_color.rgb = vec3(
		brightness, 
		brightness, 
		brightness
	);
	fragment_uv = vertex_uv;
}
